<form id="ventaForm" action="/ventas/add" method="post">
    <div class="container p-4">
        <div class="row">
            <div class="col-lg-8 mx-auto">
                <div class="card">
                    <div class="card-header text-center">
                        <h2>Registrar Venta</h2>
                    </div>
                    <div class="card-body">
                        <div class="text-center mb-4 mt-2">
                            <h4>PRODUCTOS</h4>
                        </div>
                        <div id="productos-container">
                            <div class="card">
                                <div class="text-center mt-3 mb-3">
                                    <input type="text" class="form-control searchProduct" placeholder="Buscar Producto">
                                </div>
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Producto</span>
                                    <select id="productoselect-0" name="producto" class="form-select form-select-sm"
                                        aria-label=".form-select-sm example" required>
                                        <option value="">Seleccione un Producto</option>
                                        {{#each productos}}
                                        <option value="{{id_producto}}">{{nombre_producto}} ({{inventario_total}} en
                                            Existencias)</option>
                                        {{else}}
                                        <option value="">No hay nada para mostrar</option>
                                        {{/each}}
                                    </select>
                                </div>
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Precio de Venta</span>
                                    <select id="precioselect-0" name="precioventa" class="form-select form-select-sm"
                                        aria-label=".form-select-sm example" required>
                                        <option value="">Seleccione un Precio</option>
                                        <option value="">No hay nada para mostrar</option>
                                    </select>
                                    <span class="input-group-text">Cantidad</span>
                                    <input type="text" name="cantidad" class="form-control" required>
                                    <button type="button" class="addproducto btn btn-outline-primary">+</button>
                                </div>
                            </div>
                        </div>
                        <div class="text-end mt-3">
                            <button type="button" class="btn btn-primary generarCotizacionBtn">Generar
                                Cotización</button>
                            <button type="button" class="btn btn-success" data-bs-toggle="modal"
                                data-bs-target="#exampleModal">
                                Realizar Venta
                            </button>
                            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
                                aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h1 class="modal-title fs-5" id="exampleModalLabel">¿Está seguro que desea
                                                realizar esta acción?</h1>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            Una vez realizada esta acción no podrán realizarse cambios
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary"
                                                data-bs-dismiss="modal">Volver</button>
                                            <button type="submit" class="btn btn-success">Realizar Venta</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        let productCounter = 1; // Contador para generar identificadores únicos

        // Función para agregar un nuevo selector de productos
        function addproducto() {
            console.log("Añadiendo producto...");
            const productoGroup = document.createElement('div');
            productoGroup.classList.add('card', 'mb-3', 'mt-3');
            productoGroup.innerHTML = `
        <div class="text-center mt-3 mb-3">
            <input type="text" class="form-control searchProduct" placeholder="Buscar Producto">
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Producto</span>
            <select id="productoselect-${productCounter}" name="producto" class="form-select form-select-sm"
                aria-label=".form-select-sm example" required>
                <option value="">Seleccione un Producto</option>
                {{#each productos}}
                <option value="{{id_producto}}">{{nombre_producto}} ({{inventario_total}} en Existencias)</option>
                {{else}}
                <option value="">No hay nada para mostrar</option>
                {{/each}}
            </select>
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Precio de Venta</span>
            <select id="precioselect-${productCounter}" name="precioventa" class="form-select form-select-sm"
                aria-label=".form-select-sm example" required>
                <option value="">Seleccione un Precio</option>
                <option value="">No hay nada para mostrar</option>
            </select>
            <span class="input-group-text">Cantidad</span>
            <input type="text" name="cantidad" class="form-control" required>
            <button type="button" class="btn btn-outline-danger removeElementBtn">-</button>
            <button type="button" class="addproducto btn btn-outline-primary">+</button>
        </div>
    `;
            document.getElementById('productos-container').appendChild(productoGroup);
            productoGroup.querySelector('.removeElementBtn').addEventListener('click', removeElement);

            // Incrementar el contador para el próximo producto
            productCounter++;

            // Agregar el evento de búsqueda al nuevo campo de búsqueda dinámico
            productoGroup.querySelector('.searchProduct').addEventListener('input', function () {
                const searchText = this.value.toLowerCase();
                const options = this.closest('.card').querySelector('select[name="producto"]').options;
                Array.from(options).forEach(option => {
                    const text = option.textContent.toLowerCase();
                    const isVisible = text.includes(searchText);
                    option.style.display = isVisible ? 'block' : 'none';
                });
            });
        }

        // Función para remover un elemento
        function removeElement(event) {
            event.target.parentNode.parentNode.remove();
        }

        // Evento de cambio en los selectores de productos
        document.addEventListener('change', function (event) {
            if (event.target.id.startsWith('productoselect-')) {
                const productoId = event.target.value; // Obtener el ID del producto seleccionado
                const precioSelectId = event.target.id.replace('productoselect-', 'precioselect-');
                const precioSelect = document.getElementById(precioSelectId);

                if (productoId === '') {
                    // Si se selecciona "Seleccione un Producto", restablecer el selector de precios
                    precioSelect.innerHTML = `<option value="">Seleccione un Precio</option>
                                        <option value="">No hay nada para mostrar</option>`;
                } else {
                    // Realizar una solicitud AJAX al servidor para obtener los precios de compra del producto seleccionado
                    fetch(`/ventas/productos/${productoId}/preciosVenta`)
                        .then(response => response.json())
                        .then(data => {
                            // Limpiar el selector de precios de compra
                            precioSelect.innerHTML = '<option value="">Seleccione un Precio</option>';

                            // Agregar las opciones de precios de compra recibidas del servidor al selector
                            data.forEach(precio => {
                                precioSelect.innerHTML += `<option value="${precio.id_precio}">S/. ${precio.precio_venta} (${precio.nombre_unidad})</option>`;
                            });
                        })
                        .catch(error => console.error('Error al obtener los precios de compra:', error));
                }
            }
        });

        // Agregar event listener al contenedor padre de productos
        document.getElementById('productos-container').addEventListener('click', function (event) {
            if (event.target.classList.contains('addproducto')) {
                addproducto();
            }
            if (event.target.classList.contains('removeElementBtn')) {
                event.target.parentNode.parentNode.remove();
            }
        });

        // Evento para filtrar opciones del select de productos
        document.querySelectorAll('.searchProduct').forEach(input => {
            input.addEventListener('input', function () {
                const searchText = this.value.toLowerCase();
                const options = this.closest('.card').querySelector('select[name="producto"]').options;
                Array.from(options).forEach(option => {
                    const text = option.textContent.toLowerCase();
                    const isVisible = text.includes(searchText);
                    option.style.display = isVisible ? 'block' : 'none';
                });
            });
        });

        // Frontend - función para generar la cotización y recibir el PDF
        function generarCotizacion() {
            const productos = document.querySelectorAll('select[name="producto"]');
            const cantidades = document.querySelectorAll('input[name="cantidad"]');
            const precios = document.querySelectorAll('select[name="precioventa"]');

            const data = {
                productos: [],
                cantidades: [],
                precios: []
            };

            productos.forEach((producto, index) => {
                data.productos.push(producto.value);
                data.cantidades.push(cantidades[index].value);
                data.precios.push(precios[index].value);
            });

            fetch('/ventas/cotizacion', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => {
                            throw new Error(data.error); // Lanza un Error con el mensaje del servidor
                        });
                    }
                    return response.blob();
                })
                .then(blob => {
                    if (blob.type === 'application/pdf') {
                        const url = window.URL.createObjectURL(blob);
                        window.open(url);
                    } else {
                        throw new Error('El servidor devolvió un tipo de archivo no válido.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Mostrar el mensaje de error al usuario mediante un alert
                    alert(error.message);
                });
        }

        document.querySelector('.generarCotizacionBtn').addEventListener('click', generarCotizacion);
    });
</script>